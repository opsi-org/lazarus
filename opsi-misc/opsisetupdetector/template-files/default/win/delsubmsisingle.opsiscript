; ----------------------------------------------------------------
; This is a opsi-script file.
; See https://opsi.org    https://uib.de
; This code was originally created by opsi-setup-detector #@osdVersion*#
; ----------------------------------------------------------------
encoding=utf8

comment "Start the Uninstall check:"

; Variant 1:
set $UninstallList$ = addtolist($UninstallList$,"#@productVersion*#=#@MsiId1*#")
; you may add later aditional msiids to this list
; set $msi-list$ = addtolist($msi-list$,"<version>=<GUID>")

; Variant 2:
;Set $UninstallList$ = shellCall('wmic product where "Name like '+ $DisplayName$ + '" get identifyingnumber')
;Set $UninstallList$ = getSubListByContaining ("{", $UninstallList$)

if count($UninstallList$) int> "0"
	#@preUninstallLines*#
	Comment "Uninstalling all found versions"
	for %uninstallEntry% in $UninstallList$ do Sub_Uninstallation_msi
	#@postUninstallLines*#
endif

if not(($InstallDir$ = '') or ($InstallDir$ = 'unknown'))
	if directoryexists($InstallDir$)
		SleepSeconds 5
		Files_uninstall
	endif
endif
#@DelsubHandleDesktopIcon*#

[Sub_Uninstallation_msi]
set $MsiVersion$ = TakeString(0, splitstring('%uninstallEntry%', "="))
set $MsiId$ = TakeString(1, splitstring('%uninstallEntry%', "="))

if stringtobool(checkForMsiProduct($MsiId$))
	Message "Uninstalling :"  + $ProductId$ + " " + $MsiVersion$+ "..."
	Winbatch_Uninstall_1
	Sub_Check_ExitCode_1
else
	Comment "No previously installed " + $ProductId$ + " version found"
endif

[Winbatch_uninstall_1]
#@uninstallCommandLine1*#

[Winbatch_uninstall_2]
#@uninstallCommandLine2*#

[Sub_Check_ExitCode_1]
Set $ExitCode$ = getlastexitcode
if stringtobool(#@isExitcodeFatalFunction1*#($ExitCode$, "true", $ErrorString$ ))
	#@installErrorHandlingLines1*#
	LogError $ErrorString$
	isfatalerror $ErrorString$
else
	Comment $ErrorString$
endif


