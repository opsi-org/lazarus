; ----------------------------------------------------------------
; This is a opsi-script file.
; See https://opsi.org    https://uib.de
; This code was originally created by opsi-setup-detector #@osdVersion*#
; ----------------------------------------------------------------
encoding=utf8

[Actions]
requiredOpsiscriptVersion >= "4.12.4.23"

importlib "uib_exitcode.opsiscript"
importlib "osd-lib.opsiscript"
importlib "uib_lin_install.opsiscript"
#@importLibs*#

; All variables are defined here:
include_insert "define_vars_multi.opsiscript"


Set $arch$ = GetSystemType
#@GetProductProperty*#

; ----------------------------------------------------------------
; $ProductId$ is the name of the product in opsi, only lower letters, no umlauts, no white spaces, use '-' as a seperator
Set $ProductId$		 = "#@productId*#"
; the path where we find the product after the installation
Set $InstallDir1$		= "#@InstallDir1*#"
Set $InstallDir2$		= "#@InstallDir2*#"
Set $LicenseRequired$ = "#@LicenseRequired*#"
Set $LicensePool$	  = ""
if (($arch$ = "x86 System") and ($install_architecture$ = "system specific")) or ($install_architecture$ = "both") or ($install_architecture$ = "32 only")
	Set $MinimumSpace$	 = "#@MinimumSpace1*#"
else
	if ($arch$ = "64 Bit System") and (($install_architecture$ = "system specific") or ($install_architecture$ = "64 only"))
		Set $MinimumSpace$	 = "#@MinimumSpace2*#"
	endif
	if ($arch$ = "64 Bit System") and ($install_architecture$ = "both")
		Set $MinimumSpace$	 = "#@MinimumSpace3*#"
	endif
endif
; ----------------------------------------------------------------

set $OS$ = GetOS

if not(($OS$ = "Windows_NT"))
	logError "Installation aborted: wrong OS version: only Windows"
	isFatalError "wrong OS"
endif

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError "No Space"
	; Stop process and set installation status to failed
endif


comment "Show product picture"
ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $ProductId$


if FileExists("%ScriptPath%\delsub.opsiscript")
	comment "Start uninstall sub section"
	Sub "%ScriptPath%\delsub.opsiscript"
endif

Message "Installing " + $ProductId$ + " ..."

if $LicenseRequired$ = "true"
	comment "Licensing required, reserve license and get license key"
	set $LicenseKey$ = get_licensekey_byPoolOrKey($LicensePool$)
endif

if (($arch$ = "x86 System") and ($install_architecture$ = "system specific")) or ($install_architecture$ = "both") or ($install_architecture$ = "32 only")

	#@preInstallLines*#
	comment "Start setup program"
	ChangeDirectory "%SCRIPTPATH%\files1"
	;----------------------------------------------
	Winbatch_install_1  #@installWaitForProc1*#
	;----------------------------------------------
	set $ExitCode$ = getlastexitcode
	if "true" = #@isExitcodeFatalFunction1*#($exitcode$, "true", $ErrorString$ )
		#@installErrorHandlingLines1*#
		LogError $ErrorString$
		isfatalerror $ErrorString$
	else
		Comment $ErrorString$
	endif
	#@postInstallLines*#
endif

if ($arch$ = "64 Bit System") and (($install_architecture$ = "system specific") or ($install_architecture$ = "both") or ($install_architecture$ = "64 only"))
	#@preInstallLines*#
	comment "Start setup program"
	ChangeDirectory "%SCRIPTPATH%\files2"
	;----------------------------------------------
	Winbatch_install_2  #@installWaitForProc2*#
	;----------------------------------------------
	set $ExitCode$ = getlastexitcode
	if "true" = #@isExitcodeFatalFunction2*#($exitcode$, "true", $ErrorString$ )
		#@installErrorHandlingLines2*#
		LogError $ErrorString$
		isfatalerror $ErrorString$
	else
		Comment $ErrorString$
	endif
	#@postInstallLines*#
endif

#@SetupHandleDesktopIcon*#

[Winbatch_install_1]
#@installCommandLine1*#

[Winbatch_install_2]
#@installCommandLine2*#


#@SetupDesktopiconSectionLines*#

#@SetupSectionLines1*#
; ----------------------------------------------------------------
; ----------------------------------------------------------------

